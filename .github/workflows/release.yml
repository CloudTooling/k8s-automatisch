name: Create release # You may choose a different name
run-name: ${{ inputs.releaseversion }} # Enumerates entries in the "workflow runs" view
on:
    workflow_dispatch:
        inputs:
            releaseversion:
                description: 'Release version'
                required: true
                type: string
                default: "X.Y.Z"

jobs:
    release: # Arbitrarily chosen
        name: Release
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write
            attestations: write
            id-token: write
        steps:

            -   uses: actions/create-github-app-token@v1
                id: app-token
                with:
                    app-id: ${{ vars.CI_APP_ID }}
                    private-key: ${{ secrets.CI_PRIVATE_KEY }}

            -   name: Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0
                    token: ${{ steps.app-token.outputs.token }}
                    ref: ${{ github.head_ref }}

            -   name: Get GitHub App User ID
                id: get-user-id
                run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
                env:
                    GH_TOKEN: ${{ steps.app-token.outputs.token }}

            -   name: Configure Git author
                run: |
                    git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
                    git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

            -   name: Install Helm
                uses: azure/setup-helm@v4

            -   name: Set up helm-docs
                uses: gabe565/setup-helm-docs-action@v1

            -   name: Helm Package
                run: |
                    helm repo add bitnami https://charts.bitnami.com/bitnami
                    helm dependency update chart/
                    chartVersion=$(cat chart/Chart.yaml | grep "version: " | sed -E -n "s/^version: \s*(.*)$/\1/p")
                    sed -i 's/version: '"$chartVersion"'/version: '"${{ github.event.inputs.releaseversion }}"'/g' chart/Chart.yaml
                    helm-docs
                    helm package chart
                    git add .

            -   name: Login to GitHub Container Registry
                run: |
                    echo ${{ secrets.CT_OCI_GITHUB_TOKEN }} | helm registry login ghcr.io -u $ --password-stdin

            -   name: Push Charts to GHCR
                run: |
                    helm push automatisch-${{ github.event.inputs.releaseversion }}.tgz oci://ghcr.io/cloudtooling/helm-charts

            -   name: Adding release notes
                uses: TriPSs/conventional-changelog-action@v5
                with:
                    input-file: CHANGELOG.md
                    github-token: ${{ steps.app-token.outputs.token }}
                    version-file: target/config.json
                    pre-release: true
                    skip-bump: true
                    skip-tag: true
                    skip-on-empty: true
                    tag-prefix: "v"

            -   name: Create Release on GH
                id: tag-and-release
                uses: avakar/tag-and-release@v1
                with:
                    draft: true
                    release_name: ${{ github.event.inputs.releaseversion }}
                    tag_name: v${{ github.event.inputs.releaseversion }}
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            -   name: Add SPI to github release
                uses: actions/upload-release-asset@v1
                with:
                    upload_url: ${{ steps.tag-and-release.outputs.upload_url }}
                    asset_path: automatisch-${{ github.event.inputs.releaseversion }}.tgz
                    asset_name: automatisch-chart.tgz
                    asset_content_type: application/zip
