name: Create release # You may choose a different name
run-name: ${{ inputs.releaseversion }} # Enumerates entries in the "workflow runs" view
on:
    workflow_dispatch:
        inputs:
            releaseversion:
                description: 'Release version'
                required: true
                type: string
                default: "X.Y.Z"

jobs:
    release: # Arbitrarily chosen
        name: Release
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write
            attestations: write
            id-token: write
        steps:

            -   uses: actions/create-github-app-token@v1
                id: app-token
                with:
                    app-id: ${{ vars.CI_APP_ID }}
                    private-key: ${{ secrets.CI_PRIVATE_KEY }}

            -   name: Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0
                    token: ${{ steps.app-token.outputs.token }}
                    ref: ${{ github.head_ref }}

            -   name: Get GitHub App User ID
                id: get-user-id
                run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
                env:
                    GH_TOKEN: ${{ steps.app-token.outputs.token }}

            -   name: Configure Git author
                run: |
                    git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
                    git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

            -   name: Install Helm
                uses: azure/setup-helm@v4

            -   name: Set up helm-docs
                uses: gabe565/setup-helm-docs-action@v1

            -   name: Helm Package
                run: |
                    chartVersion=$(cat chart/Chart.yaml | grep "version: " | sed -E -n "s/^version: \s*(.*)$/\1/p")
                    sed -i 's/version: '"$chartVersion"'/version: '"${{ github.event.inputs.releaseversion }}"'/g' chart/Chart.yaml
                    helm-docs
                    helm package chart
                    git add .

            -   name: Run chart-releaser
                uses: helm/chart-releaser-action@v1.6.0
                with:
                    charts_dir: .
                env:
                    CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

            -   name: Login to GitHub Container Registry
                run: |
                    echo ${{ secrets.CT_OCI_GITHUB_TOKEN }} | helm registry login ghcr.io -u $ --password-stdin

            -   name: Push Charts to GHCR
                run: |
                    for pkg in .cr-release-packages/*; do
                      if [ -z "${pkg:-}" ]; then
                        break
                      fi
                      helm push "${pkg}" oci://ghcr.io/cloudtooling/helm-charts
                    done
